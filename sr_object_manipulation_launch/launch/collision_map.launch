<launch>
  <include file="$(find sr_object_manipulation_launch)/machines/dataprocessing.machine"/>

  <node pkg="collision_map" type="collision_map_self_occ_node" name="collision_map_self_occ_node"
	respawn="false" output="screen" machine="dataprocessing">
    <remap from="robot_description" to="robot_description"/>

    <!-- The default padding to be added for the body parts the robot can see
    -->
    <param name="self_see_default_padding" type="double" value="0.01" />
    <!-- The default scaling to be added for the body parts the robot can see
    -->
    <param name="self_see_default_scale" type="double" value="1.0" />
    <!-- links to filter -->
    <!--
    <rosparam command="load" file="$(find sr_object_manipulation_launch)/config/self_filter.yaml"
	      />-->

    <!-- if someone asks for a stable map, publish the static map on the dynamic
	 map topic and no longer publish dynamic maps -->
    <param name="publish_static_over_dynamic_map" type="bool" value="false" />

    <!-- we do not want a separate map with occlusions alone -->
    <param name="publish_occlusion" type="bool" value="true" />

    <param name="fixed_frame" type="string" value="/base_link" />

    <!-- define a box of size 0.5x0.5x0.5 around (0, 0, 0) in the robot frame
    -->
    <param name="robot_frame" type="string" value="/forearm_motor"
	   />

    <param name="origin_x" type="double" value="0.0" />
    <param name="origin_y" type="double" value="0.0" />
    <param name="origin_z" type="double" value="0.0" />

    <param name="dimension_x" type="double" value="1.5" />
    <param name="dimension_y" type="double" value="1.5" />
    <param name="dimension_z" type="double" value="1.0" />

    <!-- set the resolution (1.0 cm) -->
    <param name="resolution" type="double" value="0.01" />

    <!-- cloud sources -->
    <rosparam command="load" file="$(find sr_object_manipulation_launch)/config/collision_map_sources.yaml"
	      />

  </node>

  <node pkg="tabletop_collision_map_processing" name="tabletop_collision_map_processing"
	type="tabletop_collision_map_processing_node"
	respawn="false"
	output="screen"
	machine="dataprocessing">
    <param name="get_model_mesh_srv" value="/objects_database_node/get_model_mesh"
	   />
  </node>


  <!-- send parameters for collision checking; this includes parameters for the self filter -->
  <rosparam command="load" ns="robot_description_collision" file="$(find sr_object_manipulation_launch)/config/collision_checks_both_arms.yaml" />

  <!-- send parameters for multidof -->
  <rosparam command="load" ns="robot_description_planning" file="$(find sr_object_manipulation_launch)/config/multi_dof_joints.yaml" />

  <!-- send parameters needed for motion planning -->
  <rosparam command="load" ns="robot_description_planning" file="$(find sr_object_manipulation_launch)/config/planning_groups.yaml" />

  <node machine="dataprocessing" pkg="planning_environment" type="environment_server" output="screen" name="environment_server" respawn="false">
    <remap from="collision_map" to="collision_map_occ" />
    <remap from="collision_map_update" to="collision_map_occ_update" />

    <param name="allow_valid_collisions" type="bool" value="true" />

    <param name="collision_map_safety_timeout" type="double" value="100000.0" />
    <param name="joint_states_safety_timeout" type="double" value="1.0" />
    <param name="tf_safety_timeout" type="double" value="1.0" />
    <param name="bounding_planes" type="string" value="0 0 1 -0.01" />

    <param name="object_padd" type="double" value="0.0" />
    <param name="pointcloud_padd" type="double" value="0.00" />

    <param name="contacts_to_compute_for_display" type="int" value="50" />
    <param name="joint_state_cache_allowed_difference" type="double" value=".1" />

    <rosparam command="load" file="$(find sr_object_manipulation_launch)/config/environment_server_padding.yaml" />
  </node>

  <node pkg="planning_environment" name="display_planner_collision_model_environment_server" type="display_planner_collision_model" respawn="false" output="screen">
    <param name="skip_collision_map" type="bool" value="false" />
    <param name="prefix" type="string" value="/environment_server" />
  </node>
</launch>