<launch>
  <include file="$(find sr_object_manipulation_launch)/machines/dataprocessing.machine"/>

  <node name="cluster_bounding_box_finder" pkg="object_manipulator"
	type="cluster_bounding_box_finder_server.py"
	output="screen"
	respawn="false"
        machine="dataprocessing">
  </node>

  <!-- still need a point cloud 1 for the collision_map_self_occ_node -->
  <node pkg="point_cloud_converter" name="point_cloud_converter" type="point_cloud_converter" respawn="false" machine="dataprocessing">
  	<remap from="/points2_in" to="/full_cloud_filtered" />
  	<remap from="/points_out" to="/full_cloud_filtered/pcl_compat" />
  </node>

  <node pkg="collision_map" type="collision_map_self_occ_node" name="collision_map_self_occ_node"
	respawn="false" output="screen" machine="dataprocessing">
    <remap from="robot_description" to="robot_description"/>

    <!-- The default padding to be added for the body parts the robot can see
    -->
    <param name="self_see_default_padding" type="double" value="0.003" />
    <!-- The default scaling to be added for the body parts the robot can see
    -->
    <param name="self_see_default_scale" type="double" value="1.0" />
    <!-- links to filter -->
    <!--
    <rosparam command="load" file="$(find sr_object_manipulation_launch)/config/self_filter.yaml"
	      />-->

    <!-- if someone asks for a stable map, publish the static map on the dynamic
	 map topic and no longer publish dynamic maps -->
    <param name="publish_static_over_dynamic_map" type="bool" value="false" />

    <!-- we do not want a separate map with occlusions alone -->
    <param name="publish_occlusion" type="bool" value="true" />

    <param name="fixed_frame" type="string" value="/world" />

    <!-- define a box of size 0.5x0.5x0.5 around (0, 0, 0) in the robot frame
    -->
    <param name="robot_frame" type="string" value="/shadowarm_base"
	   />

    <param name="origin_x" type="double" value="0.5" />
    <param name="origin_y" type="double" value="0.5" />
    <param name="origin_z" type="double" value="-0.5" />

    <param name="dimension_x" type="double" value="1.0" />
    <param name="dimension_y" type="double" value="1.0" />
    <param name="dimension_z" type="double" value="1.5" />

    <!-- set the resolution (1.0 cm) -->
    <param name="resolution" type="double" value="0.01" />

    <!-- cloud sources -->
    <rosparam command="load" file="$(find sr_object_manipulation_launch)/config/collision_map_sources.yaml"
	      />

  </node>

  <node pkg="tabletop_collision_map_processing" name="tabletop_collision_map_processing"
	type="tabletop_collision_map_processing_node"
	respawn="false"
	output="screen"
	machine="dataprocessing">
    <param name="get_model_mesh_srv" value="/objects_database_node/get_model_mesh"
	   />
  </node>

</launch>
