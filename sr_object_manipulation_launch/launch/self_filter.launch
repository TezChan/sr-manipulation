<launch>

  <node pkg="robot_self_filter" type="self_filter" name="kinect_self_filter"
	respawn="false" output="screen">
    <remap from="robot_description" to="robot_description"/>

    <!-- The topic for the input cloud -->
    <remap from="cloud_in" to="/pcl_filters/fully_filtered" />
    <!-- The topic for the output cloud -->
    <remap from="cloud_out" to="/kinect/depth/points_filtered2" />

    <!-- The frame of the sensor used to obtain the data to be filtered; This
	 parameter is optional. If it is not specified, shadow points will be
	 considered outside
    -->
    <param name="sensor_frame" type="string" value="openni_depth_optical_frame" />
    <param name="subsample_value" type="double" value=".02"/>

    <!-- The names of the links the sensor can see -->
    <rosparam command="load" file="$(find sr_object_manipulation_launch)/config/self_filter.yaml"/>

  </node>

  <node pkg="point_cloud_converter" name="point_cloud_converter" type="point_cloud_converter" respawn="false">
  	<remap from="/points2_in" to="/kinect/depth/points_filtered2" />
  	<remap from="/points_out" to="/kinect/depth/points_filtered" />
  </node>

  <!-- need to clear known objects from scans -->
  <node pkg="planning_environment" type="clear_known_objects" name="stereo_clear_objects" output="screen" respawn="false">
    <remap from="cloud_in" to="/kinect/depth/points_filtered" />
    <remap from="cloud_out" to="/full_cloud_filtered" />
    <param name="sensor_frame" type="string" value="/openni_depth_optical_frame" />
    <param name="fixed_frame" type="string" value="/base_link" />
    <param name="object_padd" type="double" value=".0" />
    <param name="object_scale" type="double" value="1.0" />
  </node>

</launch>
